msce@bmsce-Precision-T1700:~$ cd cassandra/apache-cassandra-3.11.0/
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0$ cd bin
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ ./cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.11.5 | CQL spec 3.4.4 | Native protocol v4]
Use HELP for help.
cqlsh> create keyspace "Employee" with replicate={'class':'SimpleStrategy','replication_factor':1};
SyntaxException: Unknown property 'replicate'
cqlsh> create keyspace "Employee" with replicate={'class':'SimpleStrategy','replication_factor':1};
SyntaxException: Unknown property 'replicate'
cqlsh> create keyspace "Employee" with replication={'class':'SimpleStrategy',     'replication_factor':1};
cqlsh> describe keyspaces

students       system_auth  project             "Employee"   
system_schema  system       system_distributed  system_traces

cqlsh> USE "Employee"
   ... ;
cqlsh:Employee> create table employee_info(Emp_id int PRIMARY KEY,Emp_Name text,Designation text,Date_of_joining timestamp,Salary int,Dept_Name text);
cqlsh:Employee> describe employee_info;

CREATE TABLE "Employee".employee_info (
    emp_id int PRIMARY KEY,
    date_of_joining timestamp,
    dept_name text,
    designation text,
    emp_name text,
    salary int
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

cqlsh:Employee> BEGIN BATCH
            ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
            ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(121,'Jane','Software Tester','2020-04-16',70000,'IT')
            ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
[1]+  Stopped                 ./cqlsh
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ ./cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.11.5 | CQL spec 3.4.4 | Native protocol v4]
Use HELP for help.
cqlsh> BEGIN BATCH
   ...             ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
   ...             ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2021-04-16',70000,'IT')
   ...             ... INSERT INTO employee_info(Emp_id,Emp_Name,Designation,Date_of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales')
   ... APPLY BATCH;
SyntaxException: line 2:12 mismatched input '.' expecting K_APPLY (BEGIN BATCH            [.]...)
cqlsh> EGIN BATCH
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2020-04-16',70000,'IT')
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales')
   ...             ... APPLY BATCH;
SyntaxException: line 1:0 no viable alternative at input 'EGIN' ([EGIN]...)
cqlsh> BEGIN BATCH             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2020-04-16',70000,'IT')             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales')             ... APPLY BATCH;
SyntaxException: line 1:24 mismatched input '.' expecting K_APPLY (BEGIN BATCH             [.]...)
cqlsh> BEGIN BATCH
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2020-04-16',70000,'IT')
   ...             ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales')
   ...             ... APPLY BATCH;
SyntaxException: line 2:12 mismatched input '.' expecting K_APPLY (BEGIN BATCH            [.]...)
cqlsh> BEGIN BATCH
   ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT')
   ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2020-04-16',70000,'IT')
   ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales')
   ... APPLY BATCH;
InvalidRequest: Error from server: code=2200 [Invalid query] message="No keyspace has been specified. USE a keyspace, or explicitly specify keyspace.tablename"
cqlsh> USE "Employee"
   ... ;
cqlsh:Employee> BEGIN BATCH INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(121,'Rose','Software Developer','2021-03-16',80000,'IT') INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(122,'Jane','Software Tester','2020-04-16',70000,'IT') INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name) VALUES(123,'John','Manager','2020-05-25',65000,'Sales') APPLY BATCH;
cqlsh:Employee> select * from employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | salary
--------+---------------------------------+-----------+--------------------+----------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |        IT | Software Developer |     Rose |  80000

(3 rows)
cqlsh:Employee> UPDATE employee_info SET Emp_Name='Rosy', Dept_Name='Software'  WHERE Emp_Id=121;
cqlsh:Employee> SELECT * FROM employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | salary
--------+---------------------------------+-----------+--------------------+----------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |  Software | Software Developer |     Rosy |  80000

(3 rows)
cqlsh:Employee> Select * from employee_info ORDER BY(Salary ASC);
SyntaxException: line 1:36 no viable alternative at input '(' (... * from employee_info ORDER BY[(]...)
cqlsh:Employee> ALTER TABLE employee_info
            ... 
[2]+  Stopped                 ./cqlsh
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ ./cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.11.5 | CQL spec 3.4.4 | Native protocol v4]
Use HELP for help.
cqlsh> USE "Employee"
   ... ;
cqlsh:Employee> PAGE OFF
            ... ;
SyntaxException: line 1:0 no viable alternative at input 'PAGE' ([PAGE]...)
cqlsh:Employee> 
[3]+  Stopped                 ./cqlsh
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ PAGE OFF
PAGE: command not found
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ PAGGING OFF
PAGGING: command not found
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ PAGING OFF
PAGING: command not found
bmsce@bmsce-Precision-T1700:~/cassandra/apache-cassandra-3.11.0/bin$ ./cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.11.5 | CQL spec 3.4.4 | Native protocol v4]
Use HELP for help.
cqlsh> USE "Employee";
cqlsh:Employee> Paging off
Disabled Query paging.
cqlsh:Employee> Select * from employee_info ORDER BY(Salary ASC);
SyntaxException: line 1:36 no viable alternative at input '(' (... * from employee_info ORDER BY[(]...)
cqlsh:Employee> Select * from employee_info ORDER BY(Salary );
SyntaxException: line 1:36 no viable alternative at input '(' (... * from employee_info ORDER BY[(]...)
cqlsh:Employee> Select * from employee_info ORDER BY Salary;
InvalidRequest: Error from server: code=2200 [Invalid query] message="ORDER BY is only supported when the partition key is restricted by an EQ or an IN."
cqlsh:Employee> ALTER TABLE employee_info
            ... ADD projects set<text>;
cqlsh:Employee> SELECT * FROM employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects | salary
--------+---------------------------------+-----------+--------------------+----------+----------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John |     null |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |     null |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |  Software | Software Developer |     Rosy |     null |  80000

(3 rows)
cqlsh:Employee> UPDATE employee_info SET projects={'sales improvement proj','ad management sys'} WHERE Emp_ID=123;
cqlsh:Employee> UPDATE employee_info SET projects={'company website','Employee management app'} WHERE Emp_ID=121; 
cqlsh:Employee> UPDATE employee_info SET projects={'company website testing'} WHERE Emp_ID=122;
cqlsh:Employee> SELECT * FROM employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects                                        | salary
--------+---------------------------------+-----------+--------------------+----------+-------------------------------------------------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John | {'ad management sys', 'sales improvement proj'} |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |                     {'company website testing'} |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |  Software | Software Developer |     Rosy |  {'Employee management app', 'company website'} |  80000

(3 rows)
cqlsh:Employee> BEGIN BATCH
            ... INSERT INTO employee_info(Emp_Id,Emp_Name,Designation,Date_Of_joining,Salary,Dept_Name,projects) VALUES(124,'Joe','Intern','2021-03-20',25000,'IT',{'LMS'}) USING TTL 15
            ... APPLY BATCH;
cqlsh:Employee> Select * from Employee;
InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table employee"
cqlsh:Employee> Select * from employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects                                        | salary
--------+---------------------------------+-----------+--------------------+----------+-------------------------------------------------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John | {'ad management sys', 'sales improvement proj'} |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |                     {'company website testing'} |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |  Software | Software Developer |     Rosy |  {'Employee management app', 'company website'} |  80000

(3 rows)
cqlsh:Employee> Select * from employee_info;

 emp_id | date_of_joining                 | dept_name | designation        | emp_name | projects                                        | salary
--------+---------------------------------+-----------+--------------------+----------+-------------------------------------------------+--------
    123 | 2020-05-24 18:30:00.000000+0000 |     Sales |            Manager |     John | {'ad management sys', 'sales improvement proj'} |  65000
    122 | 2020-04-15 18:30:00.000000+0000 |        IT |    Software Tester |     Jane |                     {'company website testing'} |  70000
    121 | 2021-03-15 18:30:00.000000+0000 |  Software | Software Developer |     Rosy |  {'Employee management app', 'company website'} |  80000

(3 rows)
cqlsh:Employee> CREATE KEYSPACE "Library" WITH REPLICATION = { 'class':'SimpleStrategy', 'replication_factor':1};
cqlsh:Employee> USE "Library";
cqlsh:Library> DESCRIBE KEYSPACES;

students       system_auth  "Library"  system_distributed  system_traces
system_schema  system       project    "Employee"        

cqlsh:Library> DESCRIBE TABLE Library_Info;

Column family 'library_info' not found
cqlsh:Library> CREATE TABLE "Library".library_info (
           ...     stud_id int,
           ...     stud_name text,
           ...     book_name text,
           ...     book_id int,
           ...     date_of_issue timestamp,
           ...     counter_value counter,
           ...     PRIMARY KEY (stud_id, stud_name, book_name, book_id, date_of_issue);
SyntaxException: line 8:71 mismatched input ';' expecting ')' (..., book_name, book_id, date_of_issue)[;])
cqlsh:Library> CREATE TABLE "Library".library_info (     stud_id int,     stud_name text,     book_name text,     book_id int,     date_of_issue timestamp,     counter_value counter,     PRIMARY KEY (stud_id, stud_name, book_name, book_id, date_of_issue);
cqlsh:Library> create table library_info (Stud_id int,counter_value counter,stud_name text,Book_Name text,Book_id int,Date_of_issue timestamp,primary key(Stud_id,stud_name,Book_name,Book_id,Date_of_issue));
cqlsh:Library> describe table library_info;

CREATE TABLE "Library".library_info (
    stud_id int,
    stud_name text,
    book_name text,
    book_id int,
    date_of_issue timestamp,
    counter_value counter,
    PRIMARY KEY (stud_id, stud_name, book_name, book_id, date_of_issue)
) WITH CLUSTERING ORDER BY (stud_name ASC, book_name ASC, book_id ASC, date_of_issue ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';

cqlsh:Library> UPDATE  Library_Info  SET Counter_value=Counter_value+1 where Stud_Id=1 and Stud_Name='Anusree' and Book_name='BDA' and Book_id=111 and Date_Of_Issue='2021-03-15';
cqlsh:Library> UPDATE  Library_Info  SET Counter_value=Counter_value+1 where Stud_Id=2 and Stud_Name='Priya' and Book_name='OOMD' and Book_id=112 and Date_Of_Issue='2021-02-12';
cqlsh:Library> UPDATE  Library_Info  SET Counter_value=Counter_value+1 where Stud_Id=112 and Stud_Name='Aswin' and Book_name='BDA' and Book_id=1123 and Date_Of_Issue='2021-01-18';
cqlsh:Library> Select * from library_info
           ... ;

 stud_id | stud_name | book_name | book_id | date_of_issue                   | counter_value
---------+-----------+-----------+---------+---------------------------------+---------------
       1 |   Anusree |       BDA |     111 | 2021-03-14 18:30:00.000000+0000 |             1
       2 |     Priya |      OOMD |     112 | 2021-02-11 18:30:00.000000+0000 |             1
     112 |     Aswin |       BDA |    1123 | 2021-01-17 18:30:00.000000+0000 |             1

(3 rows)
cqlsh:Library> UPDATE  Library_Info  SET Counter_value=Counter_value+1 where Stud_Id=112 and Stud_Name='Aswin' and Book_name='BDA' and Book_id=1123 and Date_Of_Issue='2021-01-18';
cqlsh:Library> Select * from library_info ;

 stud_id | stud_name | book_name | book_id | date_of_issue                   | counter_value
---------+-----------+-----------+---------+---------------------------------+---------------
       1 |   Anusree |       BDA |     111 | 2021-03-14 18:30:00.000000+0000 |             1
       2 |     Priya |      OOMD |     112 | 2021-02-11 18:30:00.000000+0000 |             1
     112 |     Aswin |       BDA |    1123 | 2021-01-17 18:30:00.000000+0000 |             2

(3 rows)
cqlsh:Library> COPY Library_Info(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue,Counter_value) TO 'g:\libraryInfo.csv';
Using 11 child processes

Starting copy of Library.library_info with columns [stud_id, stud_name, book_name, book_id, date_of_issue, counter_value].
Processed: 3 rows; Rate:      33 rows/s; Avg. rate:      33 rows/s
3 rows exported to 1 files in 0.101 seconds.
cqlsh:Library> CREATE TABLE Library_Info_Import( Stud_Id int, Counter_value counter, Stud_Name text, Book_Name text, Book_Id int, Date_Of_Issue timestamp, PRIMARY KEY(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue));cqlsh:Library> COPY Library_Info_Import(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue,Counter_value) FROM 'g:\libraryInfo.csv';
SyntaxException: line 1:0 no viable alternative at input 'cqlsh' ([cqlsh]...)
cqlsh:Library> CREATE TABLE Library_Info_Import( Stud_Id int, Counter_value counter, Stud_Name text, Book_Name text, Book_Id int, Date_Of_Issue timestamp, PRIMARY KEY(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue));
AlreadyExists: Table 'Library.library_info_import' already exists
cqlsh:Library> CREATE TABLE Library_Info_Import( Stud_Id int, Counter_value counter, Stud_Name text, Book_Name text, Book_Id int, Date_Of_Issue timestamp, PRIMARY KEY(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue));
AlreadyExists: Table 'Library.library_info_import' already exists
cqlsh:Library> COPY Library_Info_Import(Stud_Id,Stud_Name,Book_Name,Book_Id,Date_Of_Issue,Counter_value) FROM 'g:\libraryInfo.csv';
Using 11 child processes

Starting copy of Library.library_info_import with columns [stud_id, stud_name, book_name, book_id, date_of_issue, counter_value].
Processed: 3 rows; Rate:       6 rows/s; Avg. rate:       8 rows/s
3 rows imported from 1 files in 0.374 seconds (0 skipped).
cqlsh:Library> SELECT * FROM Library_Info_Import;

 stud_id | stud_name | book_name | book_id | date_of_issue                   | counter_value
---------+-----------+-----------+---------+---------------------------------+---------------
       1 |   Anusree |       BDA |     111 | 2021-03-14 18:30:00.000000+0000 |             1
       2 |     Priya |      OOMD |     112 | 2021-02-11 18:30:00.000000+0000 |             1
     112 |     Aswin |       BDA |    1123 | 2021-01-17 18:30:00.000000+0000 |             2

(3 rows)
cqlsh:Library> 


